#!/bin/sh
####################################################################
cfe_lanmac="et0macaddr"
cfe_2gmac="0:macaddr"
cfe_5gmac="1:macaddr"
macpattern="^[A-F0-9]{2}(:[A-F0-9]{2}){5}$"

get_mac() {
	MAC_LAN=`envram get $cfe_lanmac`
	MAC_2G=`envram get $cfe_2gmac`
	MAC_5G=`envram get $cfe_5gmac`
}

get_wl_driver() {
	WL_DRIVER=`lsmod | grep dpsta | awk '{print $4}'`
}

ops() {
	echo "${x} - 选项无效"; sleep 1
}

checkmac() {
	tmp=$(echo $1 | grep -E "$macpattern")
	if [ -z "$tmp" ]; then
		return 0
	else
		return 1
	fi
}

mod_lanmac() {
	echo "LAN MAC: $MAC_LAN"
	read -p "MAC(使用:分隔，留空不修改): " maclan
	maclan=$(echo $maclan | tr '[a-f]' '[A-F]')
	checkmac $maclan
	if [ $? -eq 1 ]; then
		`envram set $cfe_lanmac="$maclan"`
		envram commit
	else
		echo "输入错误或未输入"; sleep 1
	fi
}

mod_2gmac() {
	echo "2.4G MAC: $MAC_2G"
	read -p "MAC(使用:分隔，留空不修改): " mac2g
	maclan=$(echo $mac2g | tr '[a-f]' '[A-F]')
	checkmac $mac2g
	if [ $? -eq 1 ]; then
		`envram set $cfe_2gmac="$mac2g"`
		envram commit
	else
		echo "输入错误或未输入"; sleep 1
	fi
}

mod_5gmac() {
	echo "5G MAC: $MAC_5G"
	read -p "MAC(使用:分隔，留空不修改): " mac5g
	mac5g=$(echo $mac5g | tr '[a-f]' '[A-F]')
	checkmac $mac5g
	if [ $? -eq 1 ]; then
		`envram set $cfe_5gmac="$mac5g"`
		envram commit
	else
		echo "输入错误或未输入"; sleep 1
	fi
}

wl_dhd() {
	if [ "dhd" = $WL_DRIVER ]; then
		echo "当前驱动为dhd，无需更换。"
		return
	fi
	envram set 'chiprev'='0x4'
	envram commit
	nvram set 'chiprev'='0x4'
	rmmod dhd24
	modprobe dhd
	echo "已更换无线驱动为dhd"
	sleep 1
	reboot
}

wl_dhd24() {
	if [ "dhd24" = $WL_DRIVER ]; then
		echo "当前驱动为dhd24，无需更换。"
		return
	fi
	envram set 'chiprev'='0x3'
	envram commit
	nvram set 'chiprev'='0x3'
	rmmod dhd
	modprobe dhd24
	echo "已更换无线驱动为dhd24"
	sleep 1
	reboot
}

erase_mtd() {
	flash_erase /dev/mtd5 0 0
	echo "格式化完成！"
}

hack_softcenter_detect() {
	tar_sh="/koolshare/scripts/ks_tar_install.sh"
	app_sh="/koolshare/scripts/ks_app_install.sh"

	sed -i 's/\tdetect_package/\t# detect_package/g' ${tar_sh}

	if [ $(grep -c "s/ 384/ 386/g" ${tar_sh}) -eq 0 ]; then
		sed -i "/chmod.*\$INSTALL_SCRIPT/a\sed -i 's\/ 384\/ 386\/g' \$INSTALL_SCRIPT >\/dev\/null 2>&1" ${tar_sh}
	fi

	if [ $(grep -c "s/ 384/ 386/g" ${app_sh}) -eq 0 ]; then
		tmpsh=`grep 'chmod.*/install.sh' ${app_sh} | awk '{print $NF}'`
		sed -i "/chmod.*\/install.sh/a\sed -i 's\/ 384\/ 386\/g' ${tmpsh} >\/dev\/null 2>&1" ${app_sh}
	fi
	echo "软件中心安装脚本修改完成！"
}

reset_softcenter() {
	koolshare-reset
	jffsinit.sh
	skipd
	/koolshare/init.d/V01softok.sh
}

upgrade_mcu_firmware() {
	ORG_SCREEN=`nvram get screen_enable`
	nvram set screen_enable=0

	while [ "$(pidof k3screenctrl | grep -c [0-9])" -ge 1 ]; do
		sleep 1
	done

	devmem 0x1800c1c1 32 0x00001f0f
	phi_speed &
	wl_cr &
	uhmi
	killall -9 wl_cr
	killall -9 phi_speed
	nvram unset mcu_version
	nvram set screen_enable=${ORG_SCREEN}
	nvram commit
	echo "MCU固件升级完成！"
}
####################################################################

/usr/sbin/envrams >/dev/null
sleep 1
while true
do
	get_mac
	get_wl_driver
	clear
	echo "#########################"
	echo "       GTOOL工具箱"
	echo "#########################"
	echo "修改MAC重启后生效"
	echo "LAN  - $MAC_LAN"
	echo "2.4G - $MAC_2G"
	echo "5G   - $MAC_5G"
	echo "-------------------------"
	echo "无线驱动 - ${WL_DRIVER}.ko"
	echo "#########################"
	echo "1) 修改LAN MAC"
	echo "2) 修改2.4G MAC"
	echo "3) 修改5G MAC"
	echo "4) 无线驱动更换成dhd24.ko并重启"
	echo "5) 无线驱动更换成dhd.ko并重启"
	echo "6）格式化/dev/mtd5"
	echo "7）软件中心去检测、兼容旧版安装包"
	echo "8）重置软件中心为固件版本"
	echo "9）升级MCU固件"
	echo "q) 退出"
	echo
	read -n 1 -p "Choice: " x
	echo
	case ${x} in
	1)
		mod_lanmac; sleep 1;;
	2)
		mod_2gmac; sleep 1;;
	3)
		mod_5gmac; sleep 1;;
	4)
		wl_dhd24; sleep 1;;
	5)
		wl_dhd; sleep 1;;
	6)
		erase_mtd; sleep 1;;
	7)
		hack_softcenter_detect; sleep 1;;
	8)
		reset_softcenter; sleep 1;;
	9)
		upgrade_mcu_firmware; sleep 1;;
	q|Q)
		killall -9 envrams; echo; return 1;;
	[0-9a-zA-Z])
		ops;;
	*)
		;;
	esac
done
